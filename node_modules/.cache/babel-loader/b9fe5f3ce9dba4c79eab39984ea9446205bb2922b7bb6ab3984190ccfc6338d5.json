{"ast":null,"code":"var _jsxFileName = \"/Users/vasylchukdmytro/education/quiz-test/quiz-test/src/components/Quiz.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = ({\n  quiz,\n  onEnd\n}) => {\n  _s();\n  var _quiz$questions$curre, _quiz$questions$curre2, _quiz$questions$curre3, _quiz$questions;\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(quiz.timer ? quiz.timer * 60 : null);\n  const [answers, setAnswers] = useState([]);\n  useEffect(() => {\n    if (timeLeft === null) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev && prev > 0) {\n          return prev - 1;\n        } else {\n          clearInterval(timer);\n          setShowScore(true);\n          return 0;\n        }\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n  const handleAnswerSelect = index => {\n    setSelectedAnswerIndex(index);\n  };\n  const handleNextQuestion = () => {\n    const newAnswers = [...answers, {\n      questionIndex: currentQuestionIndex,\n      answerIndex: selectedAnswerIndex\n    }];\n    setAnswers(newAnswers);\n    if (selectedAnswerIndex !== null) {\n      const currentQuestion = quiz.questions[currentQuestionIndex];\n      const selectedAnswer = currentQuestion.answers[selectedAnswerIndex];\n      if (selectedAnswer.isCorrect) {\n        setScore(score + currentQuestion.points);\n      }\n    }\n    setSelectedAnswerIndex(null);\n    if (currentQuestionIndex + 1 === quiz.questions.length) {\n      setShowScore(true);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleSkipQuestion = () => {\n    const newAnswers = [...answers, {\n      questionIndex: currentQuestionIndex,\n      answerIndex: null\n    }];\n    setAnswers(newAnswers);\n    setSelectedAnswerIndex(null);\n    if (currentQuestionIndex + 1 === quiz.questions.length) {\n      setShowScore(true);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handleEndQuiz = () => {\n    setShowScore(true);\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? \"0\" : \"\"}${remainingSeconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: quiz.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Time Left: \", formatTime(timeLeft)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2\",\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), quiz.questions.map((question, index) => {\n        var _question$answers$fin;\n        const answer = answers.find(a => a.questionIndex === index);\n        const selectedAnswer = answer ? question.answers[answer.answerIndex] : null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold\",\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), question.answers.map((answer, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-2 ${answer.isCorrect ? \"bg-green-200\" : selectedAnswer === answer ? \"bg-red-200\" : \"\"}`,\n            children: [answer.text, \" \", selectedAnswer === answer && !answer.isCorrect && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-500\",\n              children: \"(Incorrect)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 23\n            }, this), \" \", answer.isCorrect && selectedAnswer === answer && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-500\",\n              children: [\"(+\", question.points, \" points)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 23\n            }, this)]\n          }, answer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this)), selectedAnswer && !selectedAnswer.isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-500\",\n            children: [\"Correct Answer:\", \" \", (_question$answers$fin = question.answers.find(a => a.isCorrect)) === null || _question$answers$fin === void 0 ? void 0 : _question$answers$fin.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 mt-4\",\n        onClick: onEnd,\n        children: \"Close Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold mb-2\",\n        children: [\"Question \", currentQuestionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-4\",\n        children: (_quiz$questions$curre = quiz.questions[currentQuestionIndex]) === null || _quiz$questions$curre === void 0 ? void 0 : _quiz$questions$curre.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: quiz === null || quiz === void 0 ? void 0 : (_quiz$questions$curre2 = quiz.questions[currentQuestionIndex]) === null || _quiz$questions$curre2 === void 0 ? void 0 : (_quiz$questions$curre3 = _quiz$questions$curre2.answers) === null || _quiz$questions$curre3 === void 0 ? void 0 : _quiz$questions$curre3.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `answer-${index}`,\n            name: `answer-${currentQuestionIndex}`,\n            checked: selectedAnswerIndex === index,\n            onChange: () => handleAnswerSelect(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `answer-${index}`,\n            className: \"ml-2\",\n            children: answer === null || answer === void 0 ? void 0 : answer.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this)]\n        }, answer === null || answer === void 0 ? void 0 : answer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 mt-4\",\n        onClick: handleNextQuestion,\n        children: currentQuestionIndex === (quiz === null || quiz === void 0 ? void 0 : (_quiz$questions = quiz.questions) === null || _quiz$questions === void 0 ? void 0 : _quiz$questions.length) - 1 ? \"End Quiz\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-red-500 text-white px-4 py-2 mt-4 ml-4\",\n        onClick: handleSkipQuestion,\n        children: \"Skip Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 text-white px-4 py-2 mt-4 ml-4\",\n        onClick: handleEndQuiz,\n        children: \"End Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"MOd/s9/1Tg4w2bGMfrTPpVcdF+U=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","quiz","onEnd","_s","_quiz$questions$curre","_quiz$questions$curre2","_quiz$questions$curre3","_quiz$questions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswerIndex","setSelectedAnswerIndex","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","timer","answers","setAnswers","setInterval","prev","clearInterval","handleAnswerSelect","index","handleNextQuestion","newAnswers","questionIndex","answerIndex","currentQuestion","questions","selectedAnswer","isCorrect","points","length","handleSkipQuestion","handleEndQuiz","formatTime","seconds","minutes","Math","floor","remainingSeconds","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","map","question","_question$answers$fin","answer","find","a","text","i","id","onClick","type","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/Users/vasylchukdmytro/education/quiz-test/quiz-test/src/components/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { IQuiz } from \"../types/types\";\n\ninterface QuizProps {\n  quiz: IQuiz;\n  onEnd: () => void;\n}\n\nconst Quiz: React.FC<QuizProps> = ({ quiz, onEnd }) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState<number | null>(\n    null\n  );\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(quiz.timer ? quiz.timer * 60 : null);\n  const [answers, setAnswers] = useState<\n    { questionIndex: number; answerIndex: number | null }[]\n  >([]);\n\n  useEffect(() => {\n    if (timeLeft === null) return;\n\n    const timer = setInterval(() => {\n      setTimeLeft((prev) => {\n        if (prev && prev > 0) {\n          return prev - 1;\n        } else {\n          clearInterval(timer);\n          setShowScore(true);\n          return 0;\n        }\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const handleAnswerSelect = (index: number) => {\n    setSelectedAnswerIndex(index);\n  };\n\n  const handleNextQuestion = () => {\n    const newAnswers = [\n      ...answers,\n      { questionIndex: currentQuestionIndex, answerIndex: selectedAnswerIndex },\n    ];\n    setAnswers(newAnswers);\n\n    if (selectedAnswerIndex !== null) {\n      const currentQuestion = quiz.questions[currentQuestionIndex];\n      const selectedAnswer = currentQuestion.answers[selectedAnswerIndex];\n      if (selectedAnswer.isCorrect) {\n        setScore(score + currentQuestion.points);\n      }\n    }\n\n    setSelectedAnswerIndex(null);\n    if (currentQuestionIndex + 1 === quiz.questions.length) {\n      setShowScore(true);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handleSkipQuestion = () => {\n    const newAnswers = [\n      ...answers,\n      { questionIndex: currentQuestionIndex, answerIndex: null },\n    ];\n    setAnswers(newAnswers);\n    setSelectedAnswerIndex(null);\n    if (currentQuestionIndex + 1 === quiz.questions.length) {\n      setShowScore(true);\n    } else {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handleEndQuiz = () => {\n    setShowScore(true);\n  };\n\n  const formatTime = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds < 10 ? \"0\" : \"\"}${remainingSeconds}`;\n  };\n\n  return (\n    <div className=\"mt-4\">\n      <h2 className=\"text-2xl font-bold mb-4\">{quiz.name}</h2>\n      {timeLeft !== null && (\n        <div className=\"mb-4\">\n          <span>Time Left: {formatTime(timeLeft)}</span>\n        </div>\n      )}\n      {showScore ? (\n        <div>\n          <h3 className=\"text-xl font-bold mb-2\">Your Score: {score}</h3>\n          {quiz.questions.map((question, index) => {\n            const answer = answers.find((a) => a.questionIndex === index);\n            const selectedAnswer = answer\n              ? question.answers[answer.answerIndex!]\n              : null;\n            return (\n              <div key={question.id} className=\"mb-4\">\n                <p className=\"font-bold\">{question.text}</p>\n                {question.answers.map((answer, i) => (\n                  <div\n                    key={answer.id}\n                    className={`p-2 ${\n                      answer.isCorrect\n                        ? \"bg-green-200\"\n                        : selectedAnswer === answer\n                        ? \"bg-red-200\"\n                        : \"\"\n                    }`}\n                  >\n                    {answer.text}{\" \"}\n                    {selectedAnswer === answer && !answer.isCorrect && (\n                      <span className=\"text-red-500\">(Incorrect)</span>\n                    )}{\" \"}\n                    {answer.isCorrect && selectedAnswer === answer && (\n                      <span className=\"text-green-500\">\n                        (+{question.points} points)\n                      </span>\n                    )}\n                  </div>\n                ))}\n                {selectedAnswer && !selectedAnswer.isCorrect && (\n                  <p className=\"text-green-500\">\n                    Correct Answer:{\" \"}\n                    {question.answers.find((a) => a.isCorrect)?.text}\n                  </p>\n                )}\n              </div>\n            );\n          })}\n          <button\n            className=\"bg-blue-500 text-white px-4 py-2 mt-4\"\n            onClick={onEnd}\n          >\n            Close Quiz\n          </button>\n        </div>\n      ) : (\n        <div>\n          <h3 className=\"text-xl font-bold mb-2\">\n            Question {currentQuestionIndex + 1}\n          </h3>\n          <p className=\"mb-4\">{quiz.questions[currentQuestionIndex]?.text}</p>\n          <div>\n            {quiz?.questions[currentQuestionIndex]?.answers?.map(\n              (answer, index) => (\n                <div key={answer?.id} className=\"mb-2\">\n                  <input\n                    type=\"radio\"\n                    id={`answer-${index}`}\n                    name={`answer-${currentQuestionIndex}`}\n                    checked={selectedAnswerIndex === index}\n                    onChange={() => handleAnswerSelect(index)}\n                  />\n                  <label htmlFor={`answer-${index}`} className=\"ml-2\">\n                    {answer?.text}\n                  </label>\n                </div>\n              )\n            )}\n          </div>\n          <button\n            className=\"bg-blue-500 text-white px-4 py-2 mt-4\"\n            onClick={handleNextQuestion}\n          >\n            {currentQuestionIndex === quiz?.questions?.length - 1\n              ? \"End Quiz\"\n              : \"Next Question\"}\n          </button>\n          <button\n            className=\"bg-red-500 text-white px-4 py-2 mt-4 ml-4\"\n            onClick={handleSkipQuestion}\n          >\n            Skip Question\n          </button>\n          <button\n            className=\"bg-blue-500 text-white px-4 py-2 mt-4 ml-4\"\n            onClick={handleEndQuiz}\n          >\n            End Quiz\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}